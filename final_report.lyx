#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding T1
\font_roman lmodern
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Obtaining data
\end_layout

\begin_layout Standard
The first part of the project consisted of obtaining the required data to
 analyse players and their characteristics.
 A significant amount of historical data needed to be collected and as mentioned
 previously, 
\family typewriter
www.tennisinsight.com
\family default
 and 
\family typewriter
www.atpworldtour.com
\family default
 proved to be a very useful source of data, with all required match statistics
 and player profile information.
 Unfortunately, the website does not have an API that allowed us to easily
 retrieve the data, and it was obviously impractical to obtain the data
 manually.
 Hence, a web scraper was developed using Scrapy, a Python web scraping
 framework, to obtain the relevant statistics from these websites.
\end_layout

\begin_layout Subsection
Web scraper
\end_layout

\begin_layout Standard
The complete web scraper was made up of two separate scrapers, one to pull
 match statistics and one to retrieve the betting odds for a player to win
 the match.
 This was required because of the website's design, which had these two
 sets of information of different pages.
 TennisInsight identifies each player by a 'player id', which is used in
 the scraper as well.
 Both scrapers take this player id as an input to identify the corresponding
 tennis player and retrieve the player's data from his last 100 matches.
\end_layout

\begin_layout Subsubsection*
Match Statistics Scraper
\end_layout

\begin_layout Standard
This is the first component of the web scraper.
 The scraped pages each contain a list of all of a player's matches with
 corresponding links to more detailed match statistics (which are on either
 the ATP's website or TennisInsight).
 The scraper opens each of these links and retrieves the match statistics,
 saving them to a csv file.
 
\end_layout

\begin_layout Subsubsection*
Odds Scraper
\end_layout

\begin_layout Standard
A second scraper was needed because the match statistics and the odds were
 on separate pages.
 The odds for a player to win were scraped and these were merged with the
 match statistics collected previously to create a complete record.
 In addition, the dates for each of the matches played was on this page
 too, so the odds scraper retrieved this information as well.
\end_layout

\begin_layout Subsubsection*
Linking scraped records from both scrapers
\end_layout

\begin_layout Standard
After this data was collected separately by two different scrapers, it was
 important for them to be linked together to form complete records to simplify
 processing at later stages in the project.
 SQLite, a SQL database engine was used for this purpose, providing a quick
 and straightforward way to join tables using standard SQL commands.
\end_layout

\begin_layout Section
Developing a model
\end_layout

\begin_layout Standard
There are often similar aspects and styles between two tennis players.
 For example, there are players who rely on their serves to win a majority
 of their points, while there are other players who are not particularly
 strong servers, but win a relatively higher percentage of points when returning.
 In addition, there are some players who perform above the market expectations
 when they play on their preferred tennis court surface.
\end_layout

\begin_layout Standard
In this project, we aim to capture various types of players by analysing
 a range of match statistics and player information and use this data to
 build a model to help us get an indication of the eventual winner of a
 tennis match.
 In the general sense, we can use this information to find out whether,
 in a match up between two players, a certain player with a particular playing
 style has an advantage over another player with another playing style.
 We use clustering techniques over our match statistics and player profiles
 to identify these different playing styles, and to classify 'similar' players
 into specific clusters.
\end_layout

\begin_layout Subsection
Similar players
\end_layout

\begin_layout Standard
We focus on two sets of attributes to identify similar players: general
 player profiles and past opponent profiles.
 In this section, we will first look at the attributes that belong to each
 set, and then proceed to how we can use clustering to group players into
 categories using these attributes.
\end_layout

\begin_layout Standard
For this project, we focus our analysis on the top 30 ranked players on
 the ATP tour as of May 20th 2014 [reference put rank list in appendix].
 [change why chosen the top 30 players] In addition, we have also included
 three other players in our analysis: Jeremy Chardy (ranked 40), Lleyton
 Hewitt (ranked 44), and Andreas Seppi (ranked 33), since these three players
 introduce interesting aspects into the project.
 For example, Lleyton Hewitt was ranked as world number 1 in 2001/02, but
 is currently 44, while Jeremy Chardy has caused some significant upsets
 over the past two years.
\end_layout

\begin_layout Subsubsection
General player profiles
\end_layout

\begin_layout Subsubsection
Past opponent profiles
\end_layout

\begin_layout Standard
There is a significant limitation introduced if only general player profiles
 was used to classify similar players.
 The reason for this is that professional tennis players often approach
 their opponents in different ways, and not in the same way as statistics
 classify players.
 In addition, tennis players often perform better against a certain opponent
 A than another opponent B, even though both players A and B are similar
 statistically.
 This is why we also introduce 'past opponent profiles' to determine similar
 players.
 Essentially, this means that for a certain player, we look at the performances
 of each of his past opponents (in his last 100 games) and group together
 opponents who perform similarly.
\end_layout

\begin_layout Standard
Let us look at an example of the limitation introduced if solely the general
 player profiles were used to determine similar players, and how the concept
 of 'past opponent profiles' minimize this limitation.
 Roger Federer and Novak Djokovic are similar players in terms of general
 player profiles and statistics (both players have a consistent record against
 the top 20 players, have similar service and return points won percentages,
 and have similar heights and similar service speeds).
 However, let us look at these player's previous performances when playing
 current world number one Rafael Nadal.
 Roger Federer has lost each of his last five encounters against Nadal,
 while on the other hand, Novak Djokovic has won four out of his last five
 encounters with Nadal (statistics correct as of June 2014).
 This example gives us some indication that even though players might be
 very similar statistically (as in the case of Federer and Djokovic), their
 particular opponent is a key factor in determining the outcome of the tennis
 match.
\end_layout

\begin_layout Standard
Against a specific opponent - > normalized; not a general spw, instead spw
 against that specific opponent
\end_layout

\begin_layout Standard
not only based on their statistics, but also 
\end_layout

\begin_layout Standard
We address this limitation by using both past opponent profiles and generic
 player profiles.
\end_layout

\begin_layout Standard
In this project, we introduce the idea of players with similar profiles
 in our model.
 
\end_layout

\begin_layout Standard
Limitation and how we solved it: players approach players differently, we
 understand this so we clustered by individual players.
 WHY we have clustered players in from every player's point of view? because
 we can say federer and djokovic are very similar players, but according
 to another player he might approach them very differently.
 
\begin_inset Quotes eld
\end_inset

we understand players are different to tennis players themselves
\begin_inset Quotes erd
\end_inset

 ->players have different styles and we need to account for this, give example
 hopefully? Nadal keeps thrashing federer even though they are very matched
 up acc to the stats
\end_layout

\begin_layout Standard
Two types of profiles: Individual opponent profiles & generic Individual
 opponent profiles/Head to head profiles Decision to base clustering on
 simply the Serve Points won and Return Points won Flaws with this - examples
 of matches where players have won more points but lost the match->make
 it clear that serve/return is an assumption we're taking.
 Have a separate section on this Generic player profiles Chosen player profile
 characteristics; justify whether the characteristics make sense, worthy
 to include in player profiles Importance of normalisation in k-means- everythin
g given equal importance
\end_layout

\begin_layout Standard
Analysis limited to the top 30 players + random players
\end_layout

\begin_layout Subsubsection
Limitations
\end_layout

\begin_layout Standard
It is a challenge to capture different playing styles of players through
 simply match statistics, especially due to the limitations of the data
 available.
 For example, we are able to retrieve information about a player's percentage
 of points won, and his preferred surface.
 However, more in-depth player information such as whether or not a player
 relies on a strong forehand, a player's court speed, or the degree of top-spin
 used in shots would certainly be beneficial for identifying more accurate
 playing styles.
 We aim to minimise the influence of this data limitation by including 'generic'
 attributes, such as the player's performance versus the Top 20 (for the
 previous year), into the clustering analysis.
 'Generic' attributes encompass a player's performance over several games,
 and is likely to include certain factors that cannot be measured individually.
 For example, Rafael Nadal's has won 80% of his last ten matches against
 the Top 20 over the past year (as of June 8 2014), while Jerzy Janowicz
 has won 20%.
 This clearly tells us first that Nadal is the stronger player, winning
 a higher majority of his matches against a higher ranked opposition.
 However, this 80% value also serves as a statistic which measures Nadal's
 overall performance in these particular games, likely to be indicating
 his performance in specific (often unmeasurable) factors such as more accurate
 shots and a better tactical performance against the Top 20 players.
\end_layout

\begin_layout Subsection
Difference in service points won
\end_layout

\begin_layout Standard
As mentioned earlier in the report, a key indicator of a player's performance
 in a tennis match depends on the points won on serve by each player.
 These point-winning probabilities have been used in most tennis models
 till date and are the key inputs to hierarchical Markov tennis models,
 which rely on these point winning probabilities to return a probability
 of a player winning a match.
 
\end_layout

\begin_layout Standard
O'Malley [reference] reasoned that it is the difference between the serve
 winning probabilities of each player that is integral to calculating a
 player's point winning probability and hence overall match winning probability.
 It is important to note that the actual values of the point winning probabiliti
es themselves are not as crucial as the relative difference between them.
\end_layout

\begin_layout Standard
The above findings have been used in recent tennis models, such as in the
 common opponent model proposed by Knottenbelt [reference], as well as in
 this project.
 In the common opponent model, the difference in service points won by each
 player is derived from each player's relative performance against common
 opponents.
 For example, to model how two players, player 
\shape italic
A
\shape default
 and player 
\shape italic
B
\shape default
, would play against each other, we look at the difference in service points
 won by 
\shape italic
A
\shape default
 and 
\shape italic
B
\shape default
 against a set of common opponents, 
\shape italic

\begin_inset Formula $C_{i}$
\end_inset


\shape default
's.
 We can then add the differences, which are either positive or negative,
 to the probability of winning a point on serve for each player in a match
 up between 
\shape italic
A
\shape default
 and 
\shape italic
B
\shape default
.
 The common opponent model takes advantage of the element of transitivity
 in tennis across particular i.e.
 if player A is better than a player C, and player C is better than player
 B, then player A is likely to be better than player B.
 However, this is not necessarily true, since players might have completely
 different styles and may perform better against certain types of players.
 This is a limitation that our proposed model addresses through the use
 of similar players.
 NOTE: COMMON OPP MODEL IS TRANSITIVITY OVER PARTICULAR PLAYERS, WHILE MY
 MODEL IS OVER SETS OF PLAYERS SO MORE ACCURATE
\end_layout

\begin_layout Subsubsection
Formulas and Implementation
\end_layout

\begin_layout Standard
We incorporate the ideas of similar players discussed previously into the
 difference in service points won method.
 Instead of common opponents like in the common opponent model, we use similar
 opponents through player profiles.
 
\end_layout

\begin_layout Standard
In a match between player A and B as before, we instead look first at the
 difference in service points won between A and a set of 'similar' opponents
 to B.
 We then look at the difference in service points won between B and a set
 of 'similar' opponents to A.
 These differences correspond to the advantage player A has over player
 B and the advantage player B has over player A, respectively.
 Either of these advantages can be negative, which will represent a disadvantage
 for a player over another.
 
\end_layout

\begin_layout Standard
The below formulas describe how each is calculated.
 These formulas are very similar to what has been presented by Knottenbelt
 [reference], except that instead of common opponents
\begin_inset Formula $C_{i}$
\end_inset

, we use similar opponents
\begin_inset Formula $S_{i}$
\end_inset

.
\end_layout

\begin_layout Standard
For each similar opponent, 
\begin_inset Formula $S_{i}$
\end_inset

, we calculate 
\begin_inset Formula $\triangle_{i}^{AB}$
\end_inset

, which is the measure of the advantage Player A has over Player B in terms
 of service points won.
 Note that spw(X,Y) is the percentage of points won on serve by Player X
 against Player Y, while rpw(X,Y) is the percentage of points won on return
 by Player X against Y:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\triangle_{i}^{AB}=(spw(A,S_{i})-(1-rpw(A,S_{i})))-(spw(B,S_{i})-(1-rpw(B,S_{i})))
\]

\end_inset


\end_layout

\begin_layout Standard
To model a game between player A and B, we can influence the probability
 of winning a point on serve by adding the value of
\begin_inset Formula $\triangle_{i}^{AB}$
\end_inset

to player A's probability of winning a point on serve, and subtracting the
 value of
\begin_inset Formula $\triangle_{i}^{AB}$
\end_inset

from player B's probability of winning a point on serve.
 This is done in the following way:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
P(A\, beats\, B)\approx\frac{M_{3}(0.6+\triangle_{i}^{AB},\,(1-0.6))+M_{3}(0.6,\,1-(0.6-\triangle_{i}^{AB}))}{2}
\]

\end_inset


\end_layout

\begin_layout Standard
The function 
\begin_inset Formula $M_{3}(p,q)$
\end_inset

 was proposed by O'Malley [reference], and was introduced earlier in the
 background section [section reference].
 It takes as inputs p, which is the probability of player A winning a point
 on his serve, and q, which is the probability of player B winning a point
 on his serve, and outputs a probability of player A beating B in a three
 set match using a hierarchical model.
 For a five set match, we use
\begin_inset Formula $M_{5}(p,q)$
\end_inset

 instead of 
\begin_inset Formula $M_{3}(p,q)$
\end_inset

.
 We revisit O'Malley's formulae in section 3.2 [Reference].
 In equation [equation reference], we take the average of the two match
 winning probabilities calculated.
 
\end_layout

\begin_layout Standard
---------------
\end_layout

\begin_layout Standard
implementation - talk about how the above was written in python
\end_layout

\begin_layout Standard
dealing with multiple clusters ->taking recently played of other cluster
 etc, use other cluster information
\end_layout

\begin_layout Standard
This specific set of similar opponents is found through clustering techniques
 over different sets of data which we discussed above
\end_layout

\begin_layout Section
Estimating a player's match winning probability
\end_layout

\begin_layout Standard
The calculation of a player's match winning probability is a key aspect
 of this project.
 In the previous section, we discussed how to calculate 
\begin_inset Formula $\triangle_{i}^{AB}$
\end_inset

, which is the value that represents the advantage or disadvantage that
 a player A has over player B in terms of the proportion of service points
 won against opponent Si.
 We use this value to influence the probability of winning a point on serve
 for each player in a match between player A and player B.
 Using this player's probability of winning a point on serve, we calculate
 the overall probability of a player winning a match.
\end_layout

\begin_layout Standard
O'Malley [reference] and Barnett [reference] have proposed hierarchical
 models of computing the game, set, and match winning probabilities using
 only the probabilities of a player winning a point on serve and on return.
 Both of these methods have been briefly discussed in the background section
 of the report.
 There are key differences between these two models.
 Barnett's model is implemented through a hierarchical Markov model, using
 recursive formulae to derive the probabilities of winning a game, set,
 and hence, match from any state (these states refer to particular game
 scores).
 On the other hand, O'Malley's model consists of equations which take the
 binary event of a player winning a point as a Bernoulli random variable.
 For this project, we have implemented O'Malley's model to calculate the
 match winning probability because we wanted to avoid the computational
 overhead of recursive methods, which are significant in this project, where
 we later predict a set of several hundred tennis matches.
 It is important to note, however, that the approach used in this project
 can be also used easily Barnett's model, as well as any other hierarchical
 model which takes as input the probabilities of a player winning a point
 on serve and return.
\end_layout

\begin_layout Subsection
Assumptions
\end_layout

\begin_layout Standard
A key assumption that both of these aforementioned models (Barnett's and
 O'Malley's) take into account is that each point is independently and identical
ly distributed (iid).
 This assumption was briefly touched upon in the background section of this
 project report [reference to section chapter].
 This iid assumption is that the probability of a player winning a point
 is independent of the outcome of the previous point(s) and it remains constant
 throughout the entire match.
 This is why both of the above models can be modeled as hierarchical models
 that take only the service points and return points won percentage of a
 player as inputs.
 It is intuitively difficult to accept that this assumption, especially
 considering several common phenomena that exist in sport such as fatigue
 and psychological momentum.
 For example, it is not unlikely that a player wins less points on his serve
 as the match progress due to fatigue and exhaustion.
 In addition, a player's momentum is considered by many to play a crucial
 role in the outcome of individual points.
\end_layout

\begin_layout Standard
This assumption was analyzed by Klaasen and Magnus [1].
 They tested the iid assumption using point to point data on four years
 of Wimbledon men's and women's singles matches.
 They reasoned that points are neither 
\shape italic
exactly
\shape default
 independently nor identically distributed.
 In other words, a player winning the previous point had a positive impact
 on a player winning the next point.
 However, most importantly, they found that deviations from the iid assumption
 were small and hence, this iid assumption can still be considered to be
 a good approximation.
 There are further useful observations that were presented in the same paper
 by Klaasen and Magnus: firstly, they observed that deviations change based
 on the 'importance' of points.
 Secondly, they found that the weaker the player, the stronger are the effects
 of these deviations.
 This is an additional reason for why we have focused our study on the top
 ranked players, to aim to minimise deviations from the iid assumption.
\end_layout

\begin_layout Subsection
Implementation
\end_layout

\begin_layout Standard
We have implemented O'Malley's key formulas for each stage of the hierarchical
 model in Python.
 Using point level statistics (probability of each player winning a point
 on his serve), we can calculate the probability of a player winning a game
 and a tiebreaker game.
 We then use these calculated probabilities to derive the probability of
 a player winning a set and also hence winning the match.
 As an example, the formulas for the game level and three or five set match
 level of the hierarchy are revisited below.
 All formulas have been presented in the Background [reference].
\end_layout

\begin_layout Subsubsection*
Game Level
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
G(p)=P(player\, wins\, game)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
=\sum_{i=0}^{\infty}P(player\, wins\, game\, losing\, i\, points)
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
=p^{4}+4p^{4}(1-p)+10p^{4}(1-p)^{2}+20p^{3}(1-p)^{3}\centerdot\sum_{i=3}^{\infty}\{2p(1-p)\}^{i-3}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
=p^{4}(15-4p-\frac{10p^{2}}{1-2p(1-p)})
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $p$
\end_inset

 refers to the probability of a player winning a point on serve
\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset

The formula in Equation [equation reference] covers each case for a player
 to win a game on his serve.
 He can either win four straight service points, win four points to win
 a game while losing one or two points during the game, and finally the
 case for 30-30/Deuce.
 In the Deuce case, the number of points played until the server wins follows
 a geometric distribution since the game can in theory go on for an infinity
 amount of points.
\end_layout

\begin_layout Subsubsection*
Set Level
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
S(p,q)=\sum_{i=1}^{21}B(i,1)G(p)^{B(i,2)}(1-G(p))^{B(i,3)}G(q)^{B(i,4)}(1-G(q))^{B(i,,5)}
\]

\end_inset


\end_layout

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Formula 
\[
\qquad\:\times(G(p)G(q)+(G(p)(1-G(q))+(1-G(p))G(q))T(p,q))^{B(i,6)}
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $p,q$
\end_inset

 refers to the probability of each player winning a point on serve
\end_layout

\begin_layout Standard
\begin_inset Formula $T(p,q)$
\end_inset

 refers to the probability of a player winning a tiebreaker game
\end_layout

\begin_layout Standard
\begin_inset Formula $B(x,y)$
\end_inset

 refers to the coefficient matrix calculated by O'Malley.
\end_layout

\begin_layout Standard
The formula in Equation [equation reference] sums up the probabilities of
 all 21 game scores combinations in a set.
 
\begin_inset Formula $S(p,q)$
\end_inset

 is derived from the probabilities of each player winning a game (
\begin_inset Formula $G(p)$
\end_inset

 and
\begin_inset Formula $G(q)$
\end_inset

 ) and the probability of winning a tiebreaker, 
\begin_inset Formula $T(p,q)$
\end_inset

.
 The probability formula for the tiebreaker game has been described in the
 Background [section reference].
 To implement the definition of the matrix B(x,y), the Python library 'Numpy'
 was used, which provided increased readability versus an implementation
 using a list of lists.
 This matrix is presented in the appendix [reference].
\end_layout

\begin_layout Subsubsection*
Match Level
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
M_{3}(p,q)=S(p,q)^{2}[1+2(1-S(p,q))]
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
M_{5}(p,q)=S(p,q)^{3}[1+3(1-S(p,q))+6(1-S(p,q))^{2}]
\]

\end_inset


\end_layout

\begin_layout Standard
The formula in Equation [equation reference] are for best of 3 matches and
 best of 5 matches respectively.
 For Grand Slam matches, the second formula was used, since all Grand Slam
 matches are best of five set encounters.
 For other matches on the ATP tour, the best of three set formula was used.
\end_layout

\end_body
\end_document
